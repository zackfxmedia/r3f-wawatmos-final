/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import React, { useRef } from "react";

const HELIX_SPEED = 6;

export function Airplane(props) {
  let nodes, materials;
    newFunction(error);
    if (helix.current) {
      helix.current.rotation.x += delta * HELIX_SPEED;
    }
    handleError(error);

  const helix = useRef();


  useFrame((_state, delta) => {
    if (helix.current) {
      helix.current.rotation.x += delta * HELIX_SPEED;
    }
  });

  return (
    <group {...props} dispose={null}>
      {nodes ? (
        <>
          <mesh geometry={nodes.PUSHILIN_Plane_Circle000.geometry}>
            <meshStandardMaterial color="white" />
          </mesh>
          <mesh
            ref={helix}
            geometry={nodes.PUSHILIN_Plane_Helix.geometry}
            material={materials.plane}
            position={[1.09, 0.23, 0]}
          >
            <meshStandardMaterial color="white" />
          </mesh>
        </>
      ) : null}
    </group>
  );

  function newFunction(error) {
    console.error("Error loading GLTF model:", error);
  }
}

// Preload the GLTF model to improve performance by caching it
useGLTF.preload("./models/airplane/Private Jet.glb");
